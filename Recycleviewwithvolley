main.xml file
 
 <RelativeLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".MainActivity">

        <EditText
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:id="@+id/search"
            android:hint="search here by userid"
            android:layout_marginTop="20dp"
            android:layout_marginRight="20dp"
            android:layout_marginLeft="20dp"
            android:layout_marginBottom="20dp"/>
        <androidx.recyclerview.widget.RecyclerView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/recyclerview"
            android:layout_below="@+id/search"/>
    </RelativeLayout>
    
    main.java
    
    import static android.content.ContentValues.TAG;

import androidx.appcompat.app.AppCompatActivity;

import androidx.core.view.MenuItemCompat;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import android.app.ProgressDialog;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.SearchView;
import android.widget.Toast;
import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import java.util.ArrayList;

public class Searchview extends AppCompatActivity {
    ListView listView;
    ArrayAdapter<String> adapter;
    ArrayList<String> mylist;
    ArrayList<Beanmodel>listdata=new ArrayList<>();
    RecyclerView recycleview;
    EditText search;
    DataAdapter dataAdapter;
    ArrayList<Beanmodel>listdatafilter=new ArrayList<>();//filter
    private StringRequest mStringRequest;
    private RequestQueue mRequestQueue;
    private String url="https://www.mocky.io/v2/597c41390f0000d002f4dbd1";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_searchview);
        listView = findViewById(R.id.listView);
        search=(EditText) findViewById(R.id.search);
        recycleview=(RecyclerView)findViewById(R.id.recyclerview);
        recycleview.setLayoutManager(new LinearLayoutManager(this));
        recycleview.setHasFixedSize(true);
       /* search.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
            }
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
            }
            @Override
            public void afterTextChanged(Editable s) {
                filterList.clear();
                if(s.toString().isEmpty()){
                    recyclerView.setAdapter(new PostAdapter(getApplicationContext(),postList));
                    adapter.notifyDataSetChanged();
                }
                else{
                    Filter(s.toString());
                }
            }
        });*/
        sendAndRequestResponse();




   search.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
               /* listdatafilter.clear();
                if(s.toString().isEmpty()){
                    recycleview.setAdapter(new DataAdapter(getApplicationContext(),listdata));
                    dataAdapter.notifyDataSetChanged();
                }
                else{
                    Filter(s.toString());
                }*/
            }

            @Override
            public void afterTextChanged(Editable s) {
               /* listdatafilter.clear();
                if(s.toString().isEmpty()){
                    recycleview.setAdapter(new DataAdapter(getApplicationContext(),listdata));
                    dataAdapter.notifyDataSetChanged();
                }
                else{
                    Filter(s.toString());
                }*/
                Filter(s.toString());

            }
        });
        mylist = new ArrayList<>();
        mylist.add("C");
        mylist.add("C++");
        mylist.add("C#");
        mylist.add("Java");
        mylist.add("Advanced java");
        mylist.add("Interview prep with c++");
        mylist.add("Interview prep with java");
        mylist.add("data structures with c");
        mylist.add("data structures with java");
        //Set adapter to ListView
        adapter = new ArrayAdapter<String>(this,
                android.R.layout.simple_list_item_1,
                mylist);
        listView.setAdapter(adapter);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu)
    {

        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.menu, menu);

        MenuItem searchViewItem = menu.findItem(R.id.search_bar);
        SearchView searchView = (SearchView) MenuItemCompat.getActionView(searchViewItem);

        searchView.setOnQueryTextListener(
                new SearchView.OnQueryTextListener() {
                    @Override
                    public boolean onQueryTextSubmit(String query)
                    {
                        if (mylist.contains(query)) {
                            adapter.getFilter().filter(query);
                        }
                        else {
                            Toast.makeText(Searchview.this, "Not found", Toast.LENGTH_LONG).show();
                        }
                        return false;
                    }

                    @Override
                    public boolean onQueryTextChange(String newText)
                    {
                        adapter.getFilter().filter(newText);
                        return false;
                    }
                });

        return super.onCreateOptionsMenu(menu);


    }

    private void sendAndRequestResponse() {
        final ProgressDialog progressDialog=new ProgressDialog(this);
        progressDialog.setMessage("Loading...");
        progressDialog.show();
        mRequestQueue = Volley.newRequestQueue(this);
        mStringRequest = new StringRequest(Request.Method.GET, url, new Response.Listener<String>() {
            @Override
            public void onResponse(String response) {
                try {
                    JSONObject jsonObject=new JSONObject(response);
                    JSONArray jsonArray=jsonObject.getJSONArray("users");
                    if(jsonArray.length()>0){
                        for (int i=0;i<jsonArray.length();i++){
                            JSONObject object=jsonArray.getJSONObject(i);
                            String name=object.getString("name");
                            String id=object.getString("id");
                            listdata.add(new Beanmodel(id,name,"",""));

                            Log.e("name==","  "+name);
                            Log.e("id==","  "+id);
                            progressDialog.dismiss();
                            for (int j=0;j<object.length();j++){

                                // JSONObject obj=object.getJSONObject(j);
                            } } }
                }catch (JSONException e) {
                    e.printStackTrace();
                    progressDialog.dismiss();
                }
                dataAdapter=new DataAdapter(getApplicationContext(),listdata);
                recycleview.setAdapter(dataAdapter);
                adapter.notifyDataSetChanged();
                //Toast.makeText(getApplicationContext(),"Response :" + response.toString(), Toast.LENGTH_LONG).show();//display the response on screen
                Log.e("Responsedata",response.toString());
            }
        },new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                Log.i(TAG,"Error :" + error.toString());
            }
        });
        mRequestQueue.add(mStringRequest);
    }

    private void Filter(String text) {
        for (Beanmodel post : listdata) {
            if (Integer.toString(Integer.parseInt(post.getId())).equals(text)) {

                listdatafilter.add(post);
            }

          }
        recycleview.setAdapter(new DataAdapter(Searchview.this,listdatafilter));
        dataAdapter.notifyDataSetChanged();
       }
    }
    
    beanclass or modelclass
    
    
public class Beanmodel {
    String id;
    String name;
    String email;

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getGender() {
        return gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    String gender;
    public Beanmodel(String id, String name, String email, String gender) {
        this.id = id;
        this.name = name;
        this.email = email;
        this.gender = gender;
    }



}


adapter class

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import java.util.ArrayList;


public class DataAdapter extends RecyclerView.Adapter<DataAdapter.ViewHolder> {
    ArrayList<Beanmodel> postList;
    public DataAdapter(Context context, ArrayList<Beanmodel> postList) {
        this.postList=postList;
    }
    @NonNull
    @Override
    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view= LayoutInflater.from(parent.getContext()).inflate(R.layout.rowitem,parent,false);
        return new ViewHolder(view);
    }
    @Override
    public void onBindViewHolder(@NonNull final ViewHolder holder, int position) {
    holder.title.setText(postList.get(position).getName());
    holder.userId.setText(postList.get(position).getId());

    }
    @Override
    public int getItemCount() {
        return postList.size();
    }
    public class ViewHolder extends RecyclerView.ViewHolder {
        TextView title,postdesc,userId;
        public ViewHolder(@NonNull View itemView) {
            super(itemView);
            title=itemView.findViewById(R.id.postTitle);
            postdesc=itemView.findViewById(R.id.postDesc);
            userId=itemView.findViewById(R.id.userId);
        }
    }
}
    
    
    
    
